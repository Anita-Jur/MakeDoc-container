<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "/home/makedoc/server/cfg/dtd/concept.dtd">
<concept id="EventsDB.bwp.dita" xml:lang="en-us">
  <title>EventsDB</title>
  <titlealts>
    <navtitle>Processes/tibco/bwce/sample/binding/rest/bookstore/db/EventsDB</navtitle>
  </titlealts>
  <conbody>
    <p>License for TIBCO Software Use Only! </p>
    <p>
      Section contains documentation of changed Process EventsDB (
      <xref href="../../../../../1721117756264/html/index.html?go=projects/tibco.bwce.sample.binding.rest.BookStore/Processes/tibco/bwce/sample/binding/rest/bookstore/db/EventsDB.bwp.html" scope="peer">2024/07/16 08:15</xref>
      , 
      <xref href="../../../../../1721136250430/html/index.html?go=projects/tibco.bwce.sample.binding.rest.BookStore/Processes/tibco/bwce/sample/binding/rest/bookstore/db/EventsDB.bwp.html" scope="peer">2024/07/16 13:24</xref>
      ).
    </p>
    <section>
      <p>
        <note othertype="repositoryAnalyticsAdded" type="other">Added element</note>
        <note othertype="repositoryAnalyticsRemoved" type="other">Deleted element</note>
      </p>
    </section>
  </conbody>
  <concept id="EventsDB.bwp.dita_xmlComp" xml:lang="en-us">
    <title>Changes:</title>
    <titlealts>
      <navtitle>Changes:</navtitle>
    </titlealts>
    <concept id="ProcessMain" xml:lang="en-us">
      <title>EventsDB</title>
      <titlealts>
        <navtitle>Processes/tibco/bwce/sample/binding/rest/bookstore/db/EventsDB</navtitle>
      </titlealts>
      <conbody>
        <p>License for TIBCO Software Use Only! </p>
        <p>
                            Section contains description of Process "
                            EventsDB.bwp
                            " .
                        </p>
      </conbody>
      <concept id="FolderDescription" xml:lang="en-us">
        <title>Folder description:</title>
        <conbody>
          <table>
            <tgroup cols="2">
              <colspec colname="folder" colwidth="75*"/>
              <colspec colname="desc" colwidth="175*"/>
              <thead>
                <row>
                  <entry colname="folder" valign="top">Folder</entry>
                  <entry colname="desc" valign="top">Description</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry> </entry>
                  <entry>No description</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </conbody>
      </concept>
      <concept id="ProcessDescription" xml:lang="en-us">
        <title>Process description:</title>
        <conbody>
          <table>
            <tgroup cols="1">
              <tbody>
                <row>
                  <entry>
                                            No description
                                        </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </conbody>
      </concept>
      <concept id="ProcessDefinition" xml:lang="en-us">
        <title>Process definition:</title>
        <conbody>
          <p>
                    Full process path:
                    tibco.bwce.sample.binding.rest.bookstore.db.EventsDB</p>
        </conbody>
      </concept>
      <concept id="Diagram" xml:lang="en-us">
        <title>Diagram:</title>
        <conbody/>
      </concept>
      <concept id="Starter" xml:lang="en-us">
        <title>Process starter activity:</title>
        <concept id="OnMessageStart">
          <title>
            Name:
                
            <b>OnMessageStart</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: b990af01-d575-412f-bf1f-e77e4865b19f</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageStart1">
          <title>
            Name:
                
            <b>OnMessageStart1</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: 8ab01c75-4b87-453d-b1a7-ea609f1e87ff</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageStart2">
          <title>
            Name:
                
            <b>OnMessageStart2</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: 1cabb4ef-6ccc-47dd-aefc-57ebf9f0c77d</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageStart3">
          <title>
            Name:
                
            <b>OnMessageStart3</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: 79fcaa2e-4a51-4978-b3e1-702e117f93cf</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageStart4">
          <title>
            Name:
                
            <b>OnMessageStart4</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: 75267c35-bf5a-42ac-8a6d-6726c553c284</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageStart5">
          <title>
            Name:
                
            <b>OnMessageStart5</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageStart</li>
                <li>xpdlId: ea40bdb4-4203-44ac-aeb7-0a5b00816a96</li>
              </ul>
            </p>
          </conbody>
        </concept>
      </concept>
      <concept id="EndActivity" xml:lang="en-us">
        <title>Process end activity:</title>
        <concept id="OnMessageEnd">
          <title>
            Name:
                
            <b>OnMessageEnd</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: c7a2e13d-b0b7-485d-a786-c21cc1bfddb8</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageEnd1">
          <title>
            Name:
                
            <b>OnMessageEnd1</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: 9632ae1c-f95f-4c78-9146-05880dacfe64</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageEnd2">
          <title>
            Name:
                
            <b>OnMessageEnd2</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: 62e058f8-540f-49bb-9622-736382260dfc</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageEnd3">
          <title>
            Name:
                
            <b>OnMessageEnd3</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: 7f26c1e9-6529-4ca1-bebb-280c473d3483</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageEnd4">
          <title>
            Name:
                
            <b>OnMessageEnd4</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: 682b8e41-2ace-4c53-b0cf-20cd02257cf0</li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="OnMessageEnd5">
          <title>
            Name:
                
            <b>OnMessageEnd5</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>Constructor: onMessageEnd</li>
                <li>xpdlId: 05e8037d-2a90-43ce-a745-055e2dd3e412</li>
              </ul>
            </p>
          </conbody>
        </concept>
      </concept>
      <concept id="ProcessVariables" xml:lang="en-us">
        <title>Process properties and variables</title>
        <conbody>
          <table>
            <tgroup cols="2">
              <colspec colname="folder" colwidth="75*"/>
              <colspec colname="type" colwidth="75*"/>
              <colspec colname="propertySource" colwidth="165*"/>
              <colspec colname="defaultValue" colwidth="125*"/>
              <thead>
                <row>
                  <entry colname="name" valign="top">Name</entry>
                  <entry colname="type" valign="top">Type</entry>
                  <entry colname="propertySource" valign="top">Property Source</entry>
                  <entry colname="defaultValue" valign="top">Default Value</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>_processContext</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getAllEvents</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getAllEventsOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>addEvents</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>addEventsOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByID</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByIDOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>updateEvent</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>updateEventOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>deleteEvent</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>deleteEventOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByISBN</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByISBNOut-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getAllEvents-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getAllEvents1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>jdbcProperty</entry>
                  <entry>xsd:string</entry>
                  <entry> </entry>
                  <entry>tibco.bwce.sample.binding.rest.BookStore.JDBCConnectionResource</entry>
                </row>
                <row>
                  <entry>addEvents-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>addEvents1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByID-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByID1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>updateEvent-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>updateEvent1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>deleteEvent-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>deleteEvent1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByISBN-input</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
                <row>
                  <entry>getEventByISBN1</entry>
                  <entry> </entry>
                  <entry> </entry>
                  <entry> </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </conbody>
      </concept>
      <concept id="Activities" xml:lang="en-us">
        <title>Activities:</title>
        <concept id="addEvents">
          <title>
            Name:
                
            <b>addEvents</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>
                  Description:
                            No description
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:jdbcUpdateActivityInput
		 summary
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 description
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 authorName
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 bookisbn
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 date
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 id
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id)" = </b>
                                $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+783ce8b8-cd03-4639-bd05-ed672b7fadb5+input" xmlns:tns1="http://www.example.org/Events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0"&gt;
   &lt;xsl:param name="index"/&gt;
   &lt;xsl:param name="addEvents"/&gt;
   &lt;xsl:template name="addEvents-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;summary&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/summary&gt;
         &lt;description&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/description&gt;
         &lt;authorName&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/authorName&gt;
         &lt;bookisbn&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/bookisbn&gt;
         &lt;date&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/date&gt;
         &lt;id&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>Type: bw.jdbc.update</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Statement: INSERT INTO "public"."events" ("summary", "description", "authorName",
  "bookisbn", "date","id")
  VALUES (?, ?, ?, ?, ?,?)</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Insert if record doesn't exist: false</li>
                <li>Override Transaction Behavior: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Results Use Schema: false</li>
                <li>Batch Update: false</li>
                <li>Input Variable:
                                addEvents-input</li>
                <li>Output Variable:
                                addEvents1</li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/summary</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/description</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/authorName</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/bookisbn</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/date</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/id</b>
                                /[CHOOSE]/[WHEN]  exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id) 
                              </entry>
                              <entry>$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:jdbcUpdateActivityInput
		 summary
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 description
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 authorName
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 bookisbn
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 date
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 id
			xsl:choose
			   xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id)" = </b>
                          $addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+783ce8b8-cd03-4639-bd05-ed672b7fadb5+input" xmlns:tns1="http://www.example.org/Events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0"&gt;
   &lt;xsl:param name="index"/&gt;
   &lt;xsl:param name="addEvents"/&gt;
   &lt;xsl:template name="addEvents-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;summary&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:summary"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/summary&gt;
         &lt;description&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:description"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/description&gt;
         &lt;authorName&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:authorName"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/authorName&gt;
         &lt;bookisbn&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:bookIsbn"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/bookisbn&gt;
         &lt;date&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:date"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/date&gt;
         &lt;id&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id)"&gt;
                  &lt;xsl:value-of select="$addEvents/parameters/tns1:Events/tns1:Event[$index]/tns1:id"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="addEventsOut">
          <title>
            Name:
                
            <b>addEventsOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: addEvents
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b> = </b>
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="addEvents"/&gt;
   &lt;xsl:template name="addEventsOut-input" match="/"&gt;
      &lt;tns:addEventsResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:copy-of select="$addEvents/parameters/tns1:Events"/&gt;
         &lt;/parameters&gt;
      &lt;/tns:addEventsResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:addEventsResponse</b>
                                <b>/parameters</b>
                              </entry>
                              <entry>/[COPY-OF]  $addEvents/parameters/tns1:Events </entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b> = </b>
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="addEvents"/&gt;
   &lt;xsl:template name="addEventsOut-input" match="/"&gt;
      &lt;tns:addEventsResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:copy-of select="$addEvents/parameters/tns1:Events"/&gt;
         &lt;/parameters&gt;
      &lt;/tns:addEventsResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="deleteEvent">
          <title>
            Name:
                
            <b>deleteEvent</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>
                  Description:
                            No description
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:jdbcUpdateActivityInput
		 id = </b>
                                $deleteEvent/parameters/tns1:deleteEventRequest/EventID
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+e0409135-bc24-4d1e-aeb4-619d5c86bf44+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="deleteEvent"/&gt;
   &lt;xsl:template name="deleteEvent-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;id&gt;
            &lt;xsl:value-of select="$deleteEvent/parameters/tns1:deleteEventRequest/EventID"/&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>Type: bw.jdbc.update</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Statement: DELETE FROM "public"."events"
 WHERE "id" = ?</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Insert if record doesn't exist: false</li>
                <li>Override Transaction Behavior: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Results Use Schema: false</li>
                <li>Batch Update: false</li>
                <li>Input Variable:
                                deleteEvent-input</li>
                <li>Output Variable:
                                deleteEvent1</li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/id</b>
                              </entry>
                              <entry>$deleteEvent/parameters/tns1:deleteEventRequest/EventID</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:jdbcUpdateActivityInput
		 id = </b>
                          $deleteEvent/parameters/tns1:deleteEventRequest/EventID
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+e0409135-bc24-4d1e-aeb4-619d5c86bf44+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="deleteEvent"/&gt;
   &lt;xsl:template name="deleteEvent-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;id&gt;
            &lt;xsl:value-of select="$deleteEvent/parameters/tns1:deleteEventRequest/EventID"/&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="deleteEventOut">
          <title>
            Name:
                
            <b>deleteEventOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: deleteEvent
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:deleteEventResponse
		 parameters
			tns:deleteEventResponse
			   out = </b>
                                concat(&amp;quot; { deleted event: &amp;quot;, '&amp;quot;', $deleteEvent/parameters/tns:deleteEventRequest/EventID, '&amp;quot;', &amp;quot; }&amp;quot;)
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="deleteEvent"/&gt;
   &lt;xsl:template name="deleteEventOut-input" match="/"&gt;
      &lt;tns:deleteEventResponse&gt;
         &lt;parameters&gt;
            &lt;tns:deleteEventResponse&gt;
               &lt;out&gt;
                  &lt;xsl:value-of select="concat(&amp;quot; { deleted event: &amp;quot;, '&amp;quot;', $deleteEvent/parameters/tns:deleteEventRequest/EventID, '&amp;quot;', &amp;quot; }&amp;quot;)"/&gt;
               &lt;/out&gt;
            &lt;/tns:deleteEventResponse&gt;
         &lt;/parameters&gt;
      &lt;/tns:deleteEventResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:deleteEventResponse</b>
                                <b>/parameters</b>
                                <b>/tns:deleteEventResponse</b>
                                <b>/out</b>
                              </entry>
                              <entry>concat(" { deleted event: ", '"', $deleteEvent/parameters/tns:deleteEventRequest/EventID, '"', " }")</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:deleteEventResponse
		 parameters
			tns:deleteEventResponse
			   out = </b>
                          concat(&amp;quot; { deleted event: &amp;quot;, '&amp;quot;', $deleteEvent/parameters/tns:deleteEventRequest/EventID, '&amp;quot;', &amp;quot; }&amp;quot;)
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="deleteEvent"/&gt;
   &lt;xsl:template name="deleteEventOut-input" match="/"&gt;
      &lt;tns:deleteEventResponse&gt;
         &lt;parameters&gt;
            &lt;tns:deleteEventResponse&gt;
               &lt;out&gt;
                  &lt;xsl:value-of select="concat(&amp;quot; { deleted event: &amp;quot;, '&amp;quot;', $deleteEvent/parameters/tns:deleteEventRequest/EventID, '&amp;quot;', &amp;quot; }&amp;quot;)"/&gt;
               &lt;/out&gt;
            &lt;/tns:deleteEventResponse&gt;
         &lt;/parameters&gt;
      &lt;/tns:deleteEventResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="getAllEvents">
          <title>
            Name:
                
            <b>getAllEvents</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>Description:
                            No description</li>
                <li>Type: bw.jdbc.JDBCQuery</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Maximum rows: 100</li>
                <li>Statement: SELECT *&#13;
  FROM "public"."events"</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Override Transaction Behavior: false</li>
                <li>Override JDBC Connection: false</li>
                <li>Use Nil: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Process In Subsets: false</li>
                <li>Input Variable:
                                getAllEvents-input</li>
                <li>Output Variable:
                                getAllEvents1</li>
                <li>Input bindings:
                                    Incomplete mapping
                                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="getAllEventsOut">
          <title>
            Name:
                
            <b>getAllEventsOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: getAllEvents
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:getAllEventsResponse
		 parameters
			tns1:Events
			   xsl:for-each select="$getAllEvents1/Record"
				  tns1:Event
					 xsl:if test="id"
						tns1:id = </b>
                                id
                                <b>
					 xsl:if test="summary"
						tns1:summary = </b>
                                summary
                                <b>
					 xsl:if test="description"
						tns1:description = </b>
                                description
                                <b>
					 xsl:if test="authorName"
						tns1:authorName = </b>
                                authorName
                                <b>
					 xsl:if test="bookisbn"
						tns1:bookIsbn = </b>
                                bookisbn
                                <b>
					 xsl:if test="date"
						tns1:date = </b>
                                date
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getAllEvents1"/&gt;
   &lt;xsl:template name="getAllEventsOut-input" match="/"&gt;
      &lt;tns:getAllEventsResponse&gt;
         &lt;parameters&gt;
            &lt;tns1:Events&gt;
               &lt;xsl:for-each select="$getAllEvents1/Record"&gt;
                  &lt;tns1:Event&gt;
                     &lt;xsl:if test="id"&gt;
                        &lt;tns1:id&gt;
                           &lt;xsl:value-of select="id"/&gt;
                        &lt;/tns1:id&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="summary"&gt;
                        &lt;tns1:summary&gt;
                           &lt;xsl:value-of select="summary"/&gt;
                        &lt;/tns1:summary&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="description"&gt;
                        &lt;tns1:description&gt;
                           &lt;xsl:value-of select="description"/&gt;
                        &lt;/tns1:description&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="authorName"&gt;
                        &lt;tns1:authorName&gt;
                           &lt;xsl:value-of select="authorName"/&gt;
                        &lt;/tns1:authorName&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="bookisbn"&gt;
                        &lt;tns1:bookIsbn&gt;
                           &lt;xsl:value-of select="bookisbn"/&gt;
                        &lt;/tns1:bookIsbn&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="date"&gt;
                        &lt;tns1:date&gt;
                           &lt;xsl:value-of select="date"/&gt;
                        &lt;/tns1:date&gt;
                     &lt;/xsl:if&gt;
                  &lt;/tns1:Event&gt;
               &lt;/xsl:for-each&gt;
            &lt;/tns1:Events&gt;
         &lt;/parameters&gt;
      &lt;/tns:getAllEventsResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  id 
                                <b>/tns1:id</b>
                              </entry>
                              <entry>id</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  summary 
                                <b>/tns1:summary</b>
                              </entry>
                              <entry>summary</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  description 
                                <b>/tns1:description</b>
                              </entry>
                              <entry>description</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  authorName 
                                <b>/tns1:authorName</b>
                              </entry>
                              <entry>authorName</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  bookisbn 
                                <b>/tns1:bookIsbn</b>
                              </entry>
                              <entry>bookisbn</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getAllEventsResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getAllEvents1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  date 
                                <b>/tns1:date</b>
                              </entry>
                              <entry>date</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:getAllEventsResponse
		 parameters
			tns1:Events
			   xsl:for-each select="$getAllEvents1/Record"
				  tns1:Event
					 xsl:if test="id"
						tns1:id = </b>
                          id
                          <b>
					 xsl:if test="summary"
						tns1:summary = </b>
                          summary
                          <b>
					 xsl:if test="description"
						tns1:description = </b>
                          description
                          <b>
					 xsl:if test="authorName"
						tns1:authorName = </b>
                          authorName
                          <b>
					 xsl:if test="bookisbn"
						tns1:bookIsbn = </b>
                          bookisbn
                          <b>
					 xsl:if test="date"
						tns1:date = </b>
                          date
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getAllEvents1"/&gt;
   &lt;xsl:template name="getAllEventsOut-input" match="/"&gt;
      &lt;tns:getAllEventsResponse&gt;
         &lt;parameters&gt;
            &lt;tns1:Events&gt;
               &lt;xsl:for-each select="$getAllEvents1/Record"&gt;
                  &lt;tns1:Event&gt;
                     &lt;xsl:if test="id"&gt;
                        &lt;tns1:id&gt;
                           &lt;xsl:value-of select="id"/&gt;
                        &lt;/tns1:id&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="summary"&gt;
                        &lt;tns1:summary&gt;
                           &lt;xsl:value-of select="summary"/&gt;
                        &lt;/tns1:summary&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="description"&gt;
                        &lt;tns1:description&gt;
                           &lt;xsl:value-of select="description"/&gt;
                        &lt;/tns1:description&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="authorName"&gt;
                        &lt;tns1:authorName&gt;
                           &lt;xsl:value-of select="authorName"/&gt;
                        &lt;/tns1:authorName&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="bookisbn"&gt;
                        &lt;tns1:bookIsbn&gt;
                           &lt;xsl:value-of select="bookisbn"/&gt;
                        &lt;/tns1:bookIsbn&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="date"&gt;
                        &lt;tns1:date&gt;
                           &lt;xsl:value-of select="date"/&gt;
                        &lt;/tns1:date&gt;
                     &lt;/xsl:if&gt;
                  &lt;/tns1:Event&gt;
               &lt;/xsl:for-each&gt;
            &lt;/tns1:Events&gt;
         &lt;/parameters&gt;
      &lt;/tns:getAllEventsResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="getEventByID">
          <title>
            Name:
                
            <b>getEventByID</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>
                  Description:
                            No description
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:jdbcQueryActivityInput
		 id = </b>
                                $getEventByID/parameters/tns1:getEventByIDRequest/EventID
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+14d24a1b-f90a-4069-bb81-e5d3118f28b9+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="getEventByID"/&gt;
   &lt;xsl:template name="getEventByID-input" match="/"&gt;
      &lt;tns:jdbcQueryActivityInput&gt;
         &lt;id&gt;
            &lt;xsl:value-of select="$getEventByID/parameters/tns1:getEventByIDRequest/EventID"/&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcQueryActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>Type: bw.jdbc.JDBCQuery</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Maximum rows: 100</li>
                <li>Statement: SELECT *
  FROM "public"."events"
  WHERE "id" = ?

</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Override Transaction Behavior: false</li>
                <li>Override JDBC Connection: false</li>
                <li>Use Nil: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Process In Subsets: false</li>
                <li>Input Variable:
                                getEventByID-input</li>
                <li>Output Variable:
                                getEventByID1</li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:jdbcQueryActivityInput</b>
                                <b>/id</b>
                              </entry>
                              <entry>$getEventByID/parameters/tns1:getEventByIDRequest/EventID</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:jdbcQueryActivityInput
		 id = </b>
                          $getEventByID/parameters/tns1:getEventByIDRequest/EventID
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+14d24a1b-f90a-4069-bb81-e5d3118f28b9+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="getEventByID"/&gt;
   &lt;xsl:template name="getEventByID-input" match="/"&gt;
      &lt;tns:jdbcQueryActivityInput&gt;
         &lt;id&gt;
            &lt;xsl:value-of select="$getEventByID/parameters/tns1:getEventByIDRequest/EventID"/&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcQueryActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="getEventByIDOut">
          <title>
            Name:
                
            <b>getEventByIDOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: getEventByID
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:getEventByIDResponse
		 parameters
			xsl:for-each select="$getEventByID1/Record"
			   tns1:Event
				  xsl:if test="id"
					 tns1:id = </b>
                                id
                                <b>
				  xsl:if test="summary"
					 tns1:summary = </b>
                                summary
                                <b>
				  xsl:if test="description"
					 tns1:description = </b>
                                description
                                <b>
				  xsl:if test="authorName"
					 tns1:authorName = </b>
                                authorName
                                <b>
				  xsl:if test="bookisbn"
					 tns1:bookIsbn = </b>
                                bookisbn
                                <b>
				  xsl:if test="date"
					 tns1:date = </b>
                                date
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getEventByID1"/&gt;
   &lt;xsl:template name="getEventByIDOut-input" match="/"&gt;
      &lt;tns:getEventByIDResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:for-each select="$getEventByID1/Record"&gt;
               &lt;tns1:Event&gt;
                  &lt;xsl:if test="id"&gt;
                     &lt;tns1:id&gt;
                        &lt;xsl:value-of select="id"/&gt;
                     &lt;/tns1:id&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="summary"&gt;
                     &lt;tns1:summary&gt;
                        &lt;xsl:value-of select="summary"/&gt;
                     &lt;/tns1:summary&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="description"&gt;
                     &lt;tns1:description&gt;
                        &lt;xsl:value-of select="description"/&gt;
                     &lt;/tns1:description&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="authorName"&gt;
                     &lt;tns1:authorName&gt;
                        &lt;xsl:value-of select="authorName"/&gt;
                     &lt;/tns1:authorName&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="bookisbn"&gt;
                     &lt;tns1:bookIsbn&gt;
                        &lt;xsl:value-of select="bookisbn"/&gt;
                     &lt;/tns1:bookIsbn&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="date"&gt;
                     &lt;tns1:date&gt;
                        &lt;xsl:value-of select="date"/&gt;
                     &lt;/tns1:date&gt;
                  &lt;/xsl:if&gt;
               &lt;/tns1:Event&gt;
            &lt;/xsl:for-each&gt;
         &lt;/parameters&gt;
      &lt;/tns:getEventByIDResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  id 
                                <b>/tns1:id</b>
                              </entry>
                              <entry>id</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  summary 
                                <b>/tns1:summary</b>
                              </entry>
                              <entry>summary</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  description 
                                <b>/tns1:description</b>
                              </entry>
                              <entry>description</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  authorName 
                                <b>/tns1:authorName</b>
                              </entry>
                              <entry>authorName</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  bookisbn 
                                <b>/tns1:bookIsbn</b>
                              </entry>
                              <entry>bookisbn</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByIDResponse</b>
                                <b>/parameters</b>
                                /[FOR-EACH]  $getEventByID1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  date 
                                <b>/tns1:date</b>
                              </entry>
                              <entry>date</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:getEventByIDResponse
		 parameters
			xsl:for-each select="$getEventByID1/Record"
			   tns1:Event
				  xsl:if test="id"
					 tns1:id = </b>
                          id
                          <b>
				  xsl:if test="summary"
					 tns1:summary = </b>
                          summary
                          <b>
				  xsl:if test="description"
					 tns1:description = </b>
                          description
                          <b>
				  xsl:if test="authorName"
					 tns1:authorName = </b>
                          authorName
                          <b>
				  xsl:if test="bookisbn"
					 tns1:bookIsbn = </b>
                          bookisbn
                          <b>
				  xsl:if test="date"
					 tns1:date = </b>
                          date
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getEventByID1"/&gt;
   &lt;xsl:template name="getEventByIDOut-input" match="/"&gt;
      &lt;tns:getEventByIDResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:for-each select="$getEventByID1/Record"&gt;
               &lt;tns1:Event&gt;
                  &lt;xsl:if test="id"&gt;
                     &lt;tns1:id&gt;
                        &lt;xsl:value-of select="id"/&gt;
                     &lt;/tns1:id&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="summary"&gt;
                     &lt;tns1:summary&gt;
                        &lt;xsl:value-of select="summary"/&gt;
                     &lt;/tns1:summary&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="description"&gt;
                     &lt;tns1:description&gt;
                        &lt;xsl:value-of select="description"/&gt;
                     &lt;/tns1:description&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="authorName"&gt;
                     &lt;tns1:authorName&gt;
                        &lt;xsl:value-of select="authorName"/&gt;
                     &lt;/tns1:authorName&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="bookisbn"&gt;
                     &lt;tns1:bookIsbn&gt;
                        &lt;xsl:value-of select="bookisbn"/&gt;
                     &lt;/tns1:bookIsbn&gt;
                  &lt;/xsl:if&gt;
                  &lt;xsl:if test="date"&gt;
                     &lt;tns1:date&gt;
                        &lt;xsl:value-of select="date"/&gt;
                     &lt;/tns1:date&gt;
                  &lt;/xsl:if&gt;
               &lt;/tns1:Event&gt;
            &lt;/xsl:for-each&gt;
         &lt;/parameters&gt;
      &lt;/tns:getEventByIDResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="getEventByISBN">
          <title>
            Name:
                
            <b>getEventByISBN</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>
                  Description:
                            No description
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:jdbcQueryActivityInput
		 isbn = </b>
                                $getEventByISBN/parameters/tns1:getEventByISBNRequest/ISBN
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+d653b034-be20-4e67-bfa9-214a74b8d945+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="getEventByISBN"/&gt;
   &lt;xsl:template name="getEventByISBN-input" match="/"&gt;
      &lt;tns:jdbcQueryActivityInput&gt;
         &lt;isbn&gt;
            &lt;xsl:value-of select="$getEventByISBN/parameters/tns1:getEventByISBNRequest/ISBN"/&gt;
         &lt;/isbn&gt;
      &lt;/tns:jdbcQueryActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>Type: bw.jdbc.JDBCQuery</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Maximum rows: 100</li>
                <li>Statement: SELECT *
  FROM "public"."events"
  WHERE "bookisbn" = ?
</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Override Transaction Behavior: false</li>
                <li>Override JDBC Connection: false</li>
                <li>Use Nil: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Process In Subsets: false</li>
                <li>Input Variable:
                                getEventByISBN-input</li>
                <li>Output Variable:
                                getEventByISBN1</li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:jdbcQueryActivityInput</b>
                                <b>/isbn</b>
                              </entry>
                              <entry>$getEventByISBN/parameters/tns1:getEventByISBNRequest/ISBN</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:jdbcQueryActivityInput
		 isbn = </b>
                          $getEventByISBN/parameters/tns1:getEventByISBNRequest/ISBN
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+d653b034-be20-4e67-bfa9-214a74b8d945+input" xmlns:tns1="http://xmlns.example.com/20141006121028" version="2.0"&gt;
   &lt;xsl:param name="getEventByISBN"/&gt;
   &lt;xsl:template name="getEventByISBN-input" match="/"&gt;
      &lt;tns:jdbcQueryActivityInput&gt;
         &lt;isbn&gt;
            &lt;xsl:value-of select="$getEventByISBN/parameters/tns1:getEventByISBNRequest/ISBN"/&gt;
         &lt;/isbn&gt;
      &lt;/tns:jdbcQueryActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="getEventByISBNOut">
          <title>
            Name:
                
            <b>getEventByISBNOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: getEventByISBN
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:getEventByISBNResponse
		 parameters
			tns1:Events
			   xsl:for-each select="$getEventByISBN1/Record"
				  tns1:Event
					 xsl:if test="id"
						tns1:id = </b>
                                id
                                <b>
					 xsl:if test="summary"
						tns1:summary = </b>
                                summary
                                <b>
					 xsl:if test="description"
						tns1:description = </b>
                                description
                                <b>
					 xsl:if test="authorName"
						tns1:authorName = </b>
                                authorName
                                <b>
					 xsl:if test="bookisbn"
						tns1:bookIsbn = </b>
                                bookisbn
                                <b>
					 xsl:if test="date"
						tns1:date = </b>
                                date
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getEventByISBN1"/&gt;
   &lt;xsl:template name="getEventByISBNOut-input" match="/"&gt;
      &lt;tns:getEventByISBNResponse&gt;
         &lt;parameters&gt;
            &lt;tns1:Events&gt;
               &lt;xsl:for-each select="$getEventByISBN1/Record"&gt;
                  &lt;tns1:Event&gt;
                     &lt;xsl:if test="id"&gt;
                        &lt;tns1:id&gt;
                           &lt;xsl:value-of select="id"/&gt;
                        &lt;/tns1:id&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="summary"&gt;
                        &lt;tns1:summary&gt;
                           &lt;xsl:value-of select="summary"/&gt;
                        &lt;/tns1:summary&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="description"&gt;
                        &lt;tns1:description&gt;
                           &lt;xsl:value-of select="description"/&gt;
                        &lt;/tns1:description&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="authorName"&gt;
                        &lt;tns1:authorName&gt;
                           &lt;xsl:value-of select="authorName"/&gt;
                        &lt;/tns1:authorName&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="bookisbn"&gt;
                        &lt;tns1:bookIsbn&gt;
                           &lt;xsl:value-of select="bookisbn"/&gt;
                        &lt;/tns1:bookIsbn&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="date"&gt;
                        &lt;tns1:date&gt;
                           &lt;xsl:value-of select="date"/&gt;
                        &lt;/tns1:date&gt;
                     &lt;/xsl:if&gt;
                  &lt;/tns1:Event&gt;
               &lt;/xsl:for-each&gt;
            &lt;/tns1:Events&gt;
         &lt;/parameters&gt;
      &lt;/tns:getEventByISBNResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  id 
                                <b>/tns1:id</b>
                              </entry>
                              <entry>id</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  summary 
                                <b>/tns1:summary</b>
                              </entry>
                              <entry>summary</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  description 
                                <b>/tns1:description</b>
                              </entry>
                              <entry>description</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  authorName 
                                <b>/tns1:authorName</b>
                              </entry>
                              <entry>authorName</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  bookisbn 
                                <b>/tns1:bookIsbn</b>
                              </entry>
                              <entry>bookisbn</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:getEventByISBNResponse</b>
                                <b>/parameters</b>
                                <b>/tns1:Events</b>
                                /[FOR-EACH]  $getEventByISBN1/Record 
                                <b>/tns1:Event</b>
                                /[IF]  date 
                                <b>/tns1:date</b>
                              </entry>
                              <entry>date</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:getEventByISBNResponse
		 parameters
			tns1:Events
			   xsl:for-each select="$getEventByISBN1/Record"
				  tns1:Event
					 xsl:if test="id"
						tns1:id = </b>
                          id
                          <b>
					 xsl:if test="summary"
						tns1:summary = </b>
                          summary
                          <b>
					 xsl:if test="description"
						tns1:description = </b>
                          description
                          <b>
					 xsl:if test="authorName"
						tns1:authorName = </b>
                          authorName
                          <b>
					 xsl:if test="bookisbn"
						tns1:bookIsbn = </b>
                          bookisbn
                          <b>
					 xsl:if test="date"
						tns1:date = </b>
                          date
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="getEventByISBN1"/&gt;
   &lt;xsl:template name="getEventByISBNOut-input" match="/"&gt;
      &lt;tns:getEventByISBNResponse&gt;
         &lt;parameters&gt;
            &lt;tns1:Events&gt;
               &lt;xsl:for-each select="$getEventByISBN1/Record"&gt;
                  &lt;tns1:Event&gt;
                     &lt;xsl:if test="id"&gt;
                        &lt;tns1:id&gt;
                           &lt;xsl:value-of select="id"/&gt;
                        &lt;/tns1:id&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="summary"&gt;
                        &lt;tns1:summary&gt;
                           &lt;xsl:value-of select="summary"/&gt;
                        &lt;/tns1:summary&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="description"&gt;
                        &lt;tns1:description&gt;
                           &lt;xsl:value-of select="description"/&gt;
                        &lt;/tns1:description&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="authorName"&gt;
                        &lt;tns1:authorName&gt;
                           &lt;xsl:value-of select="authorName"/&gt;
                        &lt;/tns1:authorName&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="bookisbn"&gt;
                        &lt;tns1:bookIsbn&gt;
                           &lt;xsl:value-of select="bookisbn"/&gt;
                        &lt;/tns1:bookIsbn&gt;
                     &lt;/xsl:if&gt;
                     &lt;xsl:if test="date"&gt;
                        &lt;tns1:date&gt;
                           &lt;xsl:value-of select="date"/&gt;
                        &lt;/tns1:date&gt;
                     &lt;/xsl:if&gt;
                  &lt;/tns1:Event&gt;
               &lt;/xsl:for-each&gt;
            &lt;/tns1:Events&gt;
         &lt;/parameters&gt;
      &lt;/tns:getEventByISBNResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
        <concept id="updateEvent">
          <title>
            Name:
                
            <b>updateEvent</b>
          </title>
          <conbody>
            <section>
              <ul>
                <li>
                  Description:
                            No description
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b>
	  tns:jdbcUpdateActivityInput
		 summary
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:summary)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:summary
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 description
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:description)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:description
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 authorName
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:authorName)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:authorName
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 bookisbn
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:bookIsbn)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:bookIsbn
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 date
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:date)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:date
                                <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 id
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:id)" = </b>
                                $updateEvent/parameters/tns1:Event/tns1:id
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+3e35c374-0a30-406b-bba2-264e36f8de3f+input" xmlns:tns1="http://www.example.org/Events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0"&gt;
   &lt;xsl:param name="updateEvent"/&gt;
   &lt;xsl:template name="updateEvent-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;summary&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:summary)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:summary"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/summary&gt;
         &lt;description&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:description)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:description"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/description&gt;
         &lt;authorName&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:authorName)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:authorName"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/authorName&gt;
         &lt;bookisbn&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:bookIsbn)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:bookIsbn"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/bookisbn&gt;
         &lt;date&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:date)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:date"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/date&gt;
         &lt;id&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:id)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:id"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>Type: bw.jdbc.update</li>
                <li>JDBC Shared Resource: jdbcProperty</li>
                <li>Timeout (sec): 10</li>
                <li>Statement: UPDATE "public"."events"
  SET ("summary", "description", "authorName", "bookisbn", "date") = (?, ?, ?, ?, ?) where "id" = ?</li>
                <li>
                  Parameters:
                    
                  <p>No parameters</p>
                </li>
                <li>Thread Pool Shared Resource: </li>
                <li>Insert if record doesn't exist: false</li>
                <li>Override Transaction Behavior: false</li>
                <li>Interpret Empty String As Null: false</li>
                <li>Results Use Schema: false</li>
                <li>Batch Update: false</li>
                <li>Input Variable:
                                updateEvent-input</li>
                <li>Output Variable:
                                updateEvent1</li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/summary</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:summary) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:summary</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/description</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:description) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:description</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/authorName</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:authorName) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:authorName</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/bookisbn</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:bookIsbn) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:bookIsbn</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/date</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:date) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:date</entry>
                            </row>
                            <row>
                              <entry>
                                <b>/tns:jdbcUpdateActivityInput</b>
                                <b>/id</b>
                                /[CHOOSE]/[WHEN]  exists($updateEvent/parameters/tns1:Event/tns1:id) 
                              </entry>
                              <entry>$updateEvent/parameters/tns1:Event/tns1:id</entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b>
	  tns:jdbcUpdateActivityInput
		 summary
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:summary)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:summary
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 description
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:description)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:description
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 authorName
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:authorName)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:authorName
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 bookisbn
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:bookIsbn)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:bookIsbn
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 date
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:date)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:date
                          <b>
			   xsl:otherwise
				  xsl:attribute name="xsi:nil"
		 id
			xsl:choose
			   xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:id)" = </b>
                          $updateEvent/parameters/tns1:Event/tns1:id
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://www.tibco.com/namespaces/tnt/plugins/jdbc+3e35c374-0a30-406b-bba2-264e36f8de3f+input" xmlns:tns1="http://www.example.org/Events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0"&gt;
   &lt;xsl:param name="updateEvent"/&gt;
   &lt;xsl:template name="updateEvent-input" match="/"&gt;
      &lt;tns:jdbcUpdateActivityInput&gt;
         &lt;summary&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:summary)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:summary"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/summary&gt;
         &lt;description&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:description)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:description"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/description&gt;
         &lt;authorName&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:authorName)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:authorName"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/authorName&gt;
         &lt;bookisbn&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:bookIsbn)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:bookIsbn"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/bookisbn&gt;
         &lt;date&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:date)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:date"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/date&gt;
         &lt;id&gt;
            &lt;xsl:choose&gt;
               &lt;xsl:when test="exists($updateEvent/parameters/tns1:Event/tns1:id)"&gt;
                  &lt;xsl:value-of select="$updateEvent/parameters/tns1:Event/tns1:id"/&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt;
                  &lt;xsl:attribute name="xsi:nil"&gt;true&lt;/xsl:attribute&gt;
               &lt;/xsl:otherwise&gt;
            &lt;/xsl:choose&gt;
         &lt;/id&gt;
      &lt;/tns:jdbcUpdateActivityInput&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </section>
          </conbody>
        </concept>
        <concept id="updateEventOut">
          <title>
            Name:
                
            <b>updateEventOut</b>
          </title>
          <conbody>
            <p>
              <ul>
                <li>
                  Service: EventsPersist / operation: updateEvent
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>
                                <b> = </b>
                              </codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                  <note othertype="repositoryAnalyticsRemoved" type="other">
                    <table outputclass="repositoryAnalyticsRemoved">
                      <tgroup cols="1">
                        <thead>
                          <row>
                            <entry>Mapping</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>
                              <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="updateEvent"/&gt;
   &lt;xsl:template name="updateEventOut-input" match="/"&gt;
      &lt;tns:updateEventResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:copy-of select="$updateEvent/parameters/tns1:Event"/&gt;
         &lt;/parameters&gt;
      &lt;/tns:updateEventResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                            </entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </note>
                </li>
                <li>ReplyWith: Output Message</li>
                <li>Description: </li>
                <li>
                  Input bindings:
                  <ul outputclass="mappings">
                    <li outputclass="table">
                      <lines outputclass="caption">Mapping table</lines>
                      <table outputclass="data">
                        <tgroup cols="2">
                          <thead>
                            <row>
                              <entry>Target</entry>
                              <entry>Source</entry>
                            </row>
                          </thead>
                          <tbody>
                            <row>
                              <entry>
                                <b>/tns:updateEventResponse</b>
                                <b>/parameters</b>
                              </entry>
                              <entry>/[COPY-OF]  $updateEvent/parameters/tns1:Event </entry>
                            </row>
                          </tbody>
                        </tgroup>
                      </table>
                    </li>
                    <li outputclass="tree">
                      <lines outputclass="caption">Mapping tree</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>
                          <b> = </b>
                        </codeblock>
                      </note>
                    </li>
                    <li outputclass="raw">
                      <lines outputclass="caption">Source code</lines>
                      <note othertype="repositoryAnalyticsAdded" type="other">
                        <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://xmlns.example.com/20141006121028" xmlns:tns1="http://www.example.org/Events" version="2.0"&gt;
   &lt;xsl:param name="updateEvent"/&gt;
   &lt;xsl:template name="updateEventOut-input" match="/"&gt;
      &lt;tns:updateEventResponse&gt;
         &lt;parameters&gt;
            &lt;xsl:copy-of select="$updateEvent/parameters/tns1:Event"/&gt;
         &lt;/parameters&gt;
      &lt;/tns:updateEventResponse&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</codeblock>
                      </note>
                    </li>
                  </ul>
                </li>
              </ul>
            </p>
          </conbody>
        </concept>
      </concept>
      <concept id="References" xml:lang="en-us">
        <title>References:</title>
      </concept>
      <concept id="Transitions" xml:lang="en-us">
        <title>Transitions:</title>
        <conbody>
          <ul id="getAllEvents_getAllEventsOut">
            <li>
                                          From:
                            
              <b>getAllEvents</b>
                                          -To:
                            
              <b>getAllEventsOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="ForEach_addEventsOut">
            <li>
                                          From:
                            
              <b>ForEach</b>
                                          -To:
                            
              <b>addEventsOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="OnMessageStart1_ForEach">
            <li>
                                          From:
                            
              <b>OnMessageStart1</b>
                                          -To:
                            
              <b>ForEach</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="GroupStart_addEvents">
            <li>
                                          From:
                            
              <b>GroupStart</b>
                                          -To:
                            
              <b>addEvents</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="addEvents_GroupEnd">
            <li>
                                          From:
                            
              <b>addEvents</b>
                                          -To:
                            
              <b>GroupEnd</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="getEventByID_getEventByIDOut">
            <li>
                                          From:
                            
              <b>getEventByID</b>
                                          -To:
                            
              <b>getEventByIDOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="updateEvent_updateEventOut">
            <li>
                                          From:
                            
              <b>updateEvent</b>
                                          -To:
                            
              <b>updateEventOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="deleteEvent_deleteEventOut">
            <li>
                                          From:
                            
              <b>deleteEvent</b>
                                          -To:
                            
              <b>deleteEventOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
          <ul id="getEventByISBN_getEventByISBNOut">
            <li>
                                          From:
                            
              <b>getEventByISBN</b>
                                          -To:
                            
              <b>getEventByISBNOut</b>
              <p>
                <ul>
                  <li>
                                        Label:
                                        </li>
                  <li>Type: SUCCESS</li>
                </ul>
              </p>
            </li>
          </ul>
        </conbody>
      </concept>
    </concept>
  </concept>
</concept>
