<?xml version="1.0" encoding="UTF-8" ?>
<!--============================================================================-->
<!--                                                                            -->
<!--                             BEHAIM ITS                                     -->
<!--                                                                            -->
<!--                            All Rights Reserved                             -->
<!--                                                                            -->
<!--                                                                            -->
<!-- project         : MakeDoc for TIBCO                                                  -->
<!-- filename        : Messages.xsl                                             -->
<!-- originator      : jpospisil                                                -->
<!-- creation date   : 2006-09-28                                               -->
<!-- description     : This header was automatically created                    -->
<!--                                                                            -->
<!--============================================================================-->

<xsl:transform version="2.0" 
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:java="java:com.pike.falcon.xsl.CustomFunctions" 
	exclude-result-prefixes="java">
	
	<xsl:output encoding="utf-8" method="html"/>

<xsl:param name="projectsDocumentName" />
<xsl:param name="projectsDocumentURL" />
<xsl:variable name="projectsDocument" select="document($projectsDocumentURL)" />
		
<!-- Match document root tag -->
<xsl:template match="TibcoDestinationsList">  
  <html>
  <head>
	  <title>Tibco Destinations Reference</title>
    <link href="css/report.css" rel="stylesheet" type="text/css"/>
  </head>
  <body>
	  <h1>
  	  Tibco Destinations Reference
	  </h1>    
	  Generated by MakeDoc for TIBCO on: <xsl:value-of select="@timestamp"/>          	  
 	  <h2>
	    Overview
	  </h2>

	  <xsl:apply-templates select="Group" mode="Contents">
	    <xsl:sort select="@name"/>
	    <xsl:with-param name="level" select="0" />
	  </xsl:apply-templates>

    <br/>	    	
    <br/>	    	
    
    <h2>
      Detail
    </h2>
	  
	  <xsl:apply-templates select="Group" mode="Detail">
	    <xsl:sort select="@name"/>
	    <xsl:with-param name="level" select="0" />
	  </xsl:apply-templates>
  	
	  <p align="center">
		  <hr noshade="noshade" color="#CCCCCC" width="70%" size="1"/>
		  <div align="center">
		    <table border="0">
		      <tr>
		        <td>
      		    <img src="images/pike_logo.gif" border="0" />
		        </td>
      	    <td><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></td>
		        <td align="center">
		          Â© 2014 - 2019 BehaimITS
              <br/>
              <xsl:element name="a">
			          <xsl:attribute name="href">http://www.behaimits.com</xsl:attribute>
  		          http://www.behaimits.com
		          </xsl:element>
		        </td>
		      </tr>
		    </table>
      </div>
	  </p>
  </body>
  </html>
</xsl:template>

<xsl:template match="Group" mode="Detail">
  <xsl:param name="level" />
  <xsl:variable name="groupClass" select="concat('group', $level)" />
  <xsl:variable name="groupTitleClass" select="concat('titlegroup', $level)" />
  <xsl:variable name="groupParamsClass" select="concat('paramsgroup', $level)" />
  <xsl:if test="Destination">
    <h3>
      <xsl:apply-templates select="." mode="GroupPath">
        <xsl:with-param name="level" select="0"/>
      </xsl:apply-templates>
    </h3>
    <xsl:apply-templates select="Destination" mode="Detail">
      <xsl:sort select="@name" />
    </xsl:apply-templates>
    <br/>
    <br/>
    <br/>
  </xsl:if>  
  <xsl:apply-templates select="Group" mode="Detail">
    <xsl:sort select="@name" />
    <xsl:with-param name="level" select="$level + 1" />
  </xsl:apply-templates>
</xsl:template>

<xsl:template match="Group" mode="GroupPath">
  <xsl:param name="level" />
  <xsl:if test="local-name(..)='Group'">
    <xsl:apply-templates select=".." mode="GroupPath">
      <xsl:with-param name="level" select="$level + 1" />
    </xsl:apply-templates> 
  </xsl:if>
  <xsl:value-of select="@name"/>
  <xsl:if test="Param">
      <em> (<xsl:for-each select="Param">
        <xsl:sort select="@name"/>
        <xsl:if test="position()>1">, </xsl:if>
        <xsl:value-of select="concat(@name, '=&quot;', @value, '&quot;')" />
      </xsl:for-each>)</em>
  </xsl:if>
  <xsl:if test="($level > 0) and ((not (@name = '')) or Param)">/</xsl:if>  
</xsl:template>

<xsl:template match="Group" mode="Contents">
  <xsl:param name="level" />
  <xsl:variable name="groupClass" select="concat('group', $level)" />
  <xsl:variable name="groupTitleClass" select="concat('titlegroup', $level)" />
  <xsl:variable name="groupParamsClass" select="concat('paramsgroup', $level)" />
  <xsl:element name="P">
    <xsl:attribute name="class"><xsl:value-of select="$groupTitleClass" /></xsl:attribute>
    <xsl:value-of select="@name" />
    <xsl:if test="Param">
        <em> (<xsl:for-each select="Param">
          <xsl:sort select="@name"/>
          <xsl:if test="position()>1">, </xsl:if>
          <xsl:value-of select="concat(@name, '=&quot;', @value, '&quot;')" />
        </xsl:for-each>)</em>
    </xsl:if>
  </xsl:element>
  <xsl:if test="Destination">
    <xsl:element name="P">
      <xsl:attribute name="class"><xsl:value-of select="$groupClass" /></xsl:attribute>
      <xsl:apply-templates select="Destination" mode="Contents">
        <xsl:sort select="@name" />
      </xsl:apply-templates>
    </xsl:element>
  </xsl:if>
  <xsl:apply-templates select="Group" mode="Contents">
    <xsl:sort select="@name" />
    <xsl:with-param name="level" select="$level + 1" />
  </xsl:apply-templates>
</xsl:template>

<xsl:template match="Destination" mode="Contents">
  <xsl:variable name="destinationName">
    <xsl:choose>
      <xsl:when test="@name != ''">
        <xsl:value-of select="@name"/>
      </xsl:when>
      <xsl:otherwise>
        [no destination]
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="destinationAnchorName" select="concat('destinationId_', @id)"/>
  <xsl:variable name="destinationReference" select="concat('messages.html#', $destinationAnchorName)"/>
  <xsl:element name="a">
		<xsl:attribute name="href">
			<xsl:value-of select="$destinationReference"/>
		</xsl:attribute>
    <xsl:value-of select="$destinationName"/>
	</xsl:element>
	<br/>
</xsl:template>

<xsl:template match="Destination" mode="Detail">
  <xsl:variable name="destinationName">
    <xsl:choose>
      <xsl:when test="@name != ''">
        <xsl:value-of select="@name"/>
      </xsl:when>
      <xsl:otherwise>
        [no destination]
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="destinationType" select="@type"/>
  <xsl:variable name="destinationAnchorName" select="concat('destinationId_', @id)"/>
  <xsl:if test="position() > 1">
  	<hr noshade="noshade" color="#CCCCCC" width="100%" size="1"/>
  </xsl:if>
  <xsl:element name="a">
		<xsl:attribute name="name">
			<xsl:value-of select="$destinationAnchorName"/>
		</xsl:attribute>
	</xsl:element>
  <h4>
    <xsl:value-of select="$destinationName"/>
  </h4>
 	<table>  
	  <tr>
	    <th align="left" valign="top">Project</th>
	    <th><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></th>
	    <th align="left" valign="top">Action Type</th>
	    <th><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></th>
	    <th align="left" valign="top">Transport Type</th>
	    <th><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></th>
	    <th align="left" valign="top">Source</th>
	    <th><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></th>
	    <th align="left" valign="top">Activity</th>
	    <th><xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text></th>
	    <th align="left" valign="top">Destination</th>
	  </tr>    
	  
  	<xsl:for-each select="ActivityLink">  	
  	  <xsl:variable name="activityId" select="@id"/>
      <xsl:variable name="activity" select="$projectsDocument//Activity[@id=$activityId]"/> 	
      <xsl:variable name="apPath" select="$activity/../@location"/>
      <xsl:variable name="apName" select="$activity/../@name"/>
      <xsl:variable name="apType" select="$activity/../@type"/>
      <xsl:variable name="apLocation" select="concat($apPath, '/', $apName)"/>
      <xsl:variable name="apReference" select="$activity/../@documentationReference"/>
      <xsl:variable name="activityName">
        <xsl:choose>
          <xsl:when test="$activity/@name != ''">
            <xsl:value-of select="$activity/@name" />
          </xsl:when>
          <xsl:otherwise>
            [no name]
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable> 
      <xsl:variable name="activityType" select="$activity/@type"/>
      <xsl:variable name="activityAction" select="$activity/@action"/>
      <xsl:variable name="activityAnchorName" select="concat('activityId_', $activity/@id)"/>
      <xsl:variable name="activityReference" select="concat($projectsDocumentName, '#', $activityAnchorName)"/>
      <xsl:variable name="projectAnchorName" select="concat('projectId_', $activity/../../@id)"/>
      <xsl:variable name="projectReference" select="concat($projectsDocumentName, '#', $projectAnchorName)"/>
      <xsl:variable name="projectName" select="$activity/../../@name"/>
      <xsl:variable name="transportFormat" select="$activity/Param[@name='Transport Format']/@value"/>
	    <tr>
	      <td>	      
          <xsl:element name="a">
			      <xsl:attribute name="href">
				      <xsl:value-of select="$projectReference"/>
			      </xsl:attribute>
            <xsl:value-of select="$projectName"/>
			    </xsl:element>
			  </td>
  	    <td></td>
	      <td><xsl:value-of select="$activityAction"/></td>
  	    <td></td>
	      <td><xsl:value-of select="$transportFormat"/></td>
  	    <td></td>
	      <td>
          <xsl:value-of select="java:getPrintableAccessPointType($apType)"/>
          <xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text>
          <xsl:choose>
            <xsl:when test="$apReference != ''">
              <xsl:element name="a">
			          <xsl:attribute name="href">
			            <xsl:value-of select="$apReference"/>
			          </xsl:attribute>
			          <xsl:attribute name="target">body</xsl:attribute>
  		          <xsl:value-of select="$apLocation"/>
		          </xsl:element>              
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select='$apLocation'/>
            </xsl:otherwise>
          </xsl:choose>
	      </td>
  	    <td></td>  	    
	      <td>
          <xsl:element name="a">
			      <xsl:attribute name="href">
				      <xsl:value-of select="$activityReference"/>
			      </xsl:attribute>
  	        <xsl:value-of select="$activityName"/>
			    </xsl:element>
	      </td>
  	    <td></td>
  	    <td>
          <xsl:variable name="imageSrc" select="java:getDestinationSmallImageName($activity/Destination/@type)"/>
		      <xsl:element name="img">
		        <xsl:attribute name="border">0</xsl:attribute>
		        <xsl:attribute name="src"><xsl:value-of select="$imageSrc"></xsl:value-of></xsl:attribute>
		      </xsl:element>		
          <xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text>
          <xsl:choose>
            <xsl:when test="$activity/Destination/@calculated != ''">=<xsl:value-of select="$activity/Destination/@calculated"/>
              <xsl:if test="$activity/Destination/@value != ''"> (<xsl:value-of select="$activity/Destination/@value"/>)</xsl:if>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test="$activity/Destination/@value != ''">
                  <xsl:value-of select="$activity/Destination/@value"/>
                </xsl:when>
                <xsl:otherwise>
                  [no destination]
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
  	    </td>
	    </tr>
    </xsl:for-each>
  </table>
</xsl:template>
	
</xsl:transform>

<!-- ================================= END OF FILE ============================== -->